@model Parkwhere05.Models.Carpark

@{
    ViewBag.Title = "Details";
}
<div id="wellHomePage">
    <br />
    <br />
    <br />

    <h2>Details</h2>

    <div>
        <h4>Carpark</h4>
        
        @Html.ActionLink("Bookmark this carpark!", "../Bookmarks/Create", new { carparkId = Model.id, address = Model.address })
        @Html.ActionLink("Save this carpark!", "../ParkingHistories/Create", new { carparkId = Model.id, address = Model.address })


        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.carparkNo)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.carparkNo)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.address)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.address)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.x_coord)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.x_coord)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.y_coord)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.y_coord)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.carparkType)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.carparkType)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.typeOfparking)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.typeOfparking)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.shortTermparking)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.shortTermparking)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.freeParking)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.freeParking)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.nightParking)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.nightParking)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.parkAndrideScheme)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.parkAndrideScheme)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.adhocParking)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.adhocParking)
            </dd>

        </dl>
    </div>
    <script>
    function initMap() {

        var directionsDisplay = new google.maps.DirectionsRenderer;
        var directionsService = new google.maps.DirectionsService;
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 14,
            center: { lat: 1.292582, lng: 103.855444 }
        });
        directionsDisplay.setMap(map);

        calculateAndDisplayRoute(directionsService, directionsDisplay);
        document.getElementById('mode').addEventListener('change', function () {
            calculateAndDisplayRoute(directionsService, directionsDisplay);
        });
    }

    function calculateAndDisplayRoute(directionsService, directionsDisplay) {
        var locations = @Html.Raw(Json.Encode(ViewBag.Corr));
        var currentlocations = @Html.Raw(Json.Encode(ViewBag.CurrentCor));
       //window.alert('lat ' + locations[0][0]+'lng'+locations[0][1]);
       var lat =parseFloat(locations[0][0]);
       var lng =parseFloat(locations[0][1]);
       var currlat =parseFloat(currentlocations[0][0]);
       var currlng =parseFloat(currentlocations[0][1]);
        var selectedMode = document.getElementById('mode').value;
        directionsService.route({
            origin: { lat: currlat, lng: currlng },  // current lat lng
            destination: { lat: lat , lng: lng},//dest
            // Note that Javascript allows us to access the constant
            // using square brackets and a string value as its
            // "property."
            travelMode: google.maps.TravelMode[selectedMode]
        }, function (response, status) {
            if (status == google.maps.DirectionsStatus.OK) {
                directionsDisplay.setDirections(response);
            } else {
                window.alert('Directions request failed due to ' + status);
            }
        });
    }

    window.onload = initMap;
    </script>

    <script src="https://maps.googleapis.com/maps/api/js?sensor=false&callback=initMap"
            async defer></script>

    <div>
        <div id="floating-panel">
            <b>Mode of Travel: </b>
            <select id="mode">
                <option value="DRIVING">Driving</option>
                <option value="WALKING">Walking</option>
                <option value="BICYCLING">Bicycling</option>
                <option value="TRANSIT">Transit</option>
            </select>
        </div>
        <div>
            <div id="map" style="height: 450px;"></div>
        </div>
    </div>

    
    
  

    <p>
        @*@Html.ActionLink("Edit", "Edit", new { id = Model.id }) |*@
        @Html.ActionLink("Back to List", "Index")
    </p>

</div>
